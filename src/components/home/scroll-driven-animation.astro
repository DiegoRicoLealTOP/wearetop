---
import { Icon } from "astro-icon/components";
---

<div class="min-h-[300vh] bg-black text-white">
  <div class="relative">
    <!-- Esta sección se mantendrá "atascada" mientras se hace scroll -->
    <section
      id="sticky-section"
      class="sticky top-0 z-10 flex h-screen flex-col items-center justify-center"
    >
      <div id="icon-container" class="mb-4 opacity-15">
        <Icon name="directional" class="text-cteal-100 mx-auto h-14 w-14" />
      </div>
      <h2
        class="text-center text-5xl leading-tight font-black md:text-6xl lg:text-7xl"
      >
        <span class="inline-block opacity-15">Your </span>
        <span class="inline-block opacity-15">journey </span>
        <span class="inline-block opacity-15">to </span>
        <span class="inline-block opacity-15">Happiness, </span>
        <span class="inline-block opacity-15">begins </span>
        <span class="inline-block opacity-15">Here!</span>
      </h2>
      <p
        id="description"
        class="text-cpurple-300 mx-auto mt-4 max-w-3xl text-center text-xl opacity-25 md:text-2xl"
      >
        Aprende un idioma o estudia lo que más te gusta, mientras vives la mejor
        experiencia de tu vida.
      </p>
    </section>

    <!-- Este div actúa como trigger para la animación y determina el rango del scroll -->
    <div id="animation-trigger" class="h-screen"></div>
  </div>
</div>

<script
  src="https://cdn.jsdelivr.net/npm/gsap@3.12.7/dist/ScrollTrigger.min.js"
  is:inline></script>
<script>
  import { gsap } from "gsap";
  // Aseguramos que GSAP y ScrollTrigger estén disponibles globalmente
  gsap.registerPlugin(ScrollTrigger);

  // Creamos un ScrollTrigger para "atascar" la sección mientras se hace scroll
  ScrollTrigger.create({
    trigger: "#animation-trigger", // El trigger es la altura del siguiente div
    start: "top bottom", // Comienza cuando la parte superior del trigger toca la parte inferior de la ventana
    end: "bottom top", // Termina cuando la parte inferior del trigger toca la parte superior de la ventana
    pin: "#sticky-section", // Mantenemos fija esta sección
    pinSpacing: false, // Evita que GSAP añada espacio adicional
  });

  // Ahora creamos un timeline para las animaciones dentro de la sección fija
  const tl = gsap.timeline({
    scrollTrigger: {
      trigger: "#animation-trigger",
      start: "top bottom", // Comienza en el mismo punto que el pin
      end: "bottom top", // Termina en el mismo punto que el pin
      scrub: 0.5, // Hace que la animación sea suave al hacer scroll
    },
  });

  // Animación secuencial de cada palabra
  const words = document.querySelectorAll("h2 span");
  const duration = 1 / words.length;

  words.forEach((word, index) => {
    tl.to(
      word,
      {
        opacity: 1,
        duration: duration,
        filter:
          "drop-shadow(0 0 5px rgba(255, 255, 255, 0.6)) drop-shadow(0 0 10px rgba(255, 255, 255, 0.4)) drop-shadow(0 6px 15px rgba(255, 255, 255, 0.3)) drop-shadow(0 8px 20px rgba(255, 255, 255, 0.2)) drop-shadow(0 10px 30px rgba(255, 255, 255, 0.1))",
        ease: "power2.out",
      },
      0.3 + index * duration,
    );
  });

  // Animación del párrafo y el icono
  tl.to(
    "#description",
    {
      opacity: 1,
      duration: 0.2,
      ease: "power2.out",
    },
    0.8,
  );

  tl.to(
    "#icon-container",
    {
      opacity: 1,
      duration: 0.2,
      ease: "power2.out",
    },
    0.2,
  );
</script>
